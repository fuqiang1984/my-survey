{"version":3,"sources":["svg/logo.svg","api/quizQuestions.js","components/Question.js","components/QuestionCount.js","components/AnswerOption.js","components/Quiz.js","components/Result.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","quizQuestions","question","answers","type","content","correctanswer","Question","props","react_default","a","createElement","className","QuestionCount","counter","total","AnswerOption","name","checked","answerContent","answer","id","answerType","value","disabled","onChange","onAnswerSelected","htmlFor","Quiz","react_transition_group","component","transitionName","transitionEnterTimeout","transitionLeaveTimeout","transitionAppear","transitionAppearTimeout","key","questionId","components_QuestionCount","questionTotal","components_Question","answerOptions","map","components_AnswerOption","Result","quizResult","r","correct","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","detailResult","answersCount","Nintendo","Microsoft","Sony","result","handleAnswerSelected","bind","assertThisInitialized","_this2","shuffledAnswerOptions","shuffleArray","setState","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","event","_this3","console","log","currentTarget","setUserAnswer","setTimeout","setNextQuestion","setResults","_this4","objectSpread","defineProperty","concat","toConsumableArray","components_Quiz","components_Result","src","logo","alt","renderResult","renderQuiz","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,yQC6FzBC,EA7FK,CAClB,CACIC,SAAU,SACVC,QAAS,CACL,CACIC,KAAM,YACNC,QAAS,MAEb,CACID,KAAM,WACNC,QAAS,MAEb,CACID,KAAM,OACNC,QAAS,OAGjBC,cAAc,MAElB,CACIJ,SAAU,SACVC,QAAS,CACL,CACIC,KAAM,YACNC,QAAS,MAEb,CACID,KAAM,WACNC,QAAS,MAEb,CACID,KAAM,OACNC,QAAS,OAGjBC,cAAc,MAElB,CACIJ,SAAU,SACVC,QAAS,CACL,CACIC,KAAM,YACNC,QAAS,MAEb,CACID,KAAM,WACNC,QAAS,MAEb,CACID,KAAM,OACNC,QAAS,OAGjBC,cAAc,MAElB,CACIJ,SAAU,SACVC,QAAS,CACL,CACIC,KAAM,YACNC,QAAS,MAEb,CACID,KAAM,WACNC,QAAS,MAEb,CACID,KAAM,OACNC,QAAS,OAGjBC,cAAc,MAElB,CACIJ,SAAU,UACVC,QAAS,CACL,CACIC,KAAM,YACNC,QAAS,MAEb,CACID,KAAM,WACNC,QAAS,MAEb,CACID,KAAM,OACNC,QAAS,OAGjBC,cAAc,cC9ELC,MARf,SAAkBC,GAChB,OAAOC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YAAYJ,EAAMH,UCY1BQ,MAbf,SAAuBL,GACrB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAf,YACWH,EAAAC,EAAAC,cAAA,YAAOH,EAAMM,SADxB,OAC2CL,EAAAC,EAAAC,cAAA,YAAOH,EAAMO,SCyB7CC,MA5Bf,SAAsBR,GAEpB,OACEC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBACZH,EAAAC,EAAAC,cAAA,SACEP,KAAK,QACLQ,UAAU,oBACVK,KAAK,aACLC,QAASV,EAAMW,gBAAkBX,EAAMY,OACvCC,GAAIb,EAAMc,WACVC,MAAOf,EAAMW,cACbK,SAAUhB,EAAMY,OAChBK,SAAUjB,EAAMkB,mBAElBjB,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBe,QAASnB,EAAMc,YAChDd,EAAMW,iBCiCAS,MA5Cf,SAAcpB,GAcZ,OACEC,EAAAC,EAAAC,cAACkB,EAAA,mBAAD,CACEjB,UAAU,YACVkB,UAAU,MACVC,eAAe,OACfC,uBAAwB,IACxBC,uBAAwB,IACxBC,kBAAgB,EAChBC,wBAAyB,KAEzB1B,EAAAC,EAAAC,cAAA,OAAKyB,IAAK5B,EAAM6B,YACd5B,EAAAC,EAAAC,cAAC2B,EAAD,CAAexB,QAASN,EAAM6B,WAAYtB,MAAOP,EAAM+B,gBACvD9B,EAAAC,EAAAC,cAAC6B,EAAD,CAAUnC,QAASG,EAAMN,WACzBO,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBACXJ,EAAMiC,cAAcC,IA3B7B,SAA6BN,GAC3B,OACE3B,EAAAC,EAAAC,cAACgC,EAAD,CACEP,IAAKA,EAAI/B,QACTc,cAAeiB,EAAI/B,QACnBiB,WAAYc,EAAIhC,KAChBgB,OAAQZ,EAAMY,OACdiB,WAAY7B,EAAM6B,WAClBX,iBAAkBlB,EAAMkB,yBCUjBkB,MAtBf,SAAgBpC,GACd,OACEC,EAAAC,EAAAC,cAACkB,EAAA,mBAAD,CACEjB,UAAU,mBACVkB,UAAU,MACVC,eAAe,OACfC,uBAAwB,IACxBC,uBAAwB,IACxBC,kBAAgB,EAChBC,wBAAyB,KAEzB1B,EAAAC,EAAAC,cAAA,WACJF,EAAAC,EAAAC,cAAA,cAASH,EAAMqC,WAAWH,IAAI,SAAAI,GAAC,OAAErC,EAAAC,EAAAC,cAAA,MAAIyB,IAAKU,EAAEzB,IAAKyB,EAAE5C,SAAW4C,EAAE1B,OAA/B,IAAyC0B,EAAEC,QAAStC,EAAAC,EAAAC,cAAA,sBAAsBF,EAAAC,EAAAC,cAAA,sBAA1E,QAD7B,wBCoISqC,qBA3Ib,SAAAA,EAAYxC,GAAO,IAAAyC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACjBC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAM5C,KAEDgD,MAAQ,CACX1C,QAAS,EACTuB,WAAY,EACZnC,SAAU,GACVuC,cAAe,GACfrB,OAAQ,GACRd,cAAc,GACdmD,aAAa,GACbC,aAAc,CACZC,SAAU,EACVC,UAAW,EACXC,KAAM,GAERC,QAAQ,GAGVb,EAAKc,qBAAuBd,EAAKc,qBAAqBC,KAA1Bd,OAAAe,EAAA,EAAAf,CAAAD,IAnBXA,oFAsBE,IAAAiB,EAAAd,KACbe,EAAwBlE,EAAcyC,IAAI,SAAAxC,GAAQ,OACtDgE,EAAKE,aAAalE,EAASC,WAE7BiD,KAAKiB,SAAS,CACZnE,SAAUD,EAAc,GAAGC,SAC3BI,cAAcL,EAAc,GAAGK,cAC/BmC,cAAe0B,EAAsB,0CAI5BG,GAMX,IALA,IACEC,EACAC,EAFEC,EAAeH,EAAMI,OAKlB,IAAMD,GAEXD,EAAcG,KAAKC,MAAMD,KAAKE,SAAWJ,GAIzCF,EAAiBD,EAHjBG,GAAgB,GAIhBH,EAAMG,GAAgBH,EAAME,GAC5BF,EAAME,GAAeD,EAGvB,OAAOD,+CAGYQ,GAAO,IAAAC,EAAA3B,KAC1B4B,QAAQC,IAAIH,EAAMI,eAClBF,QAAQC,IAAI7B,KAAKI,MAAMtD,UACvB8E,QAAQC,IAAI7B,KAAKI,MAAMlD,eAGvB8C,KAAK+B,cAAcL,EAAMI,cAAc3D,OAEnC6B,KAAKI,MAAMnB,WAAapC,EAAcyE,OACxCU,WAAW,kBAAML,EAAKM,mBAAmB,KAEzCD,WAAW,kBAAML,EAAKO,cAAc,2CAI1BlE,GAAQ,IAAAmE,EAAAnC,KAIpBA,KAAKiB,SAAS,SAACb,EAAOhD,GAAR,MAAmB,CAC/BkD,aAAaR,OAAAsC,EAAA,EAAAtC,CAAA,GACRM,EAAME,aADCR,OAAAuC,EAAA,EAAAvC,CAAA,GAET9B,EAASoC,EAAME,aAAatC,GAAU,IAEzCqC,aAAY,GAAAiC,OAAAxC,OAAAyC,EAAA,EAAAzC,CAAMM,EAAMC,cAAZ,CACV,CAAEpC,GAAGkE,EAAK/B,MAAMnB,WACdnC,SAASqF,EAAK/B,MAAMtD,SACpBkB,OAAOA,EACP2B,QAAS3B,IAASmE,EAAK/B,MAAMlD,iBAEjCc,OAAQA,+CAKV,IAAMN,EAAUsC,KAAKI,MAAM1C,QAAU,EAC/BuB,EAAae,KAAKI,MAAMnB,WAAa,EAE3Ce,KAAKiB,SAAS,CACZvD,QAASA,EACTuB,WAAYA,EACZnC,SAAUD,EAAca,GAASZ,SACjCI,cAAcL,EAAca,GAASR,cACrCmC,cAAexC,EAAca,GAASX,QACtCiB,OAAQ,0CAQVgC,KAAKiB,SAAS,CAACP,QAAO,yCAKtB,OACErD,EAAAC,EAAAC,cAACiF,EAAD,CACExE,OAAQgC,KAAKI,MAAMpC,OACnBqB,cAAeW,KAAKI,MAAMf,cAC1BJ,WAAYe,KAAKI,MAAMnB,WACvBnC,SAAUkD,KAAKI,MAAMtD,SACrBqC,cAAetC,EAAcyE,OAC7BhD,iBAAkB0B,KAAKW,8DAM3B,OAAOtD,EAAAC,EAAAC,cAACkF,EAAD,CAAQhD,WAAYO,KAAKI,MAAMC,gDAItC,OACEhD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,OAAKmF,IAAKC,IAAMnF,UAAU,WAAWoF,IAAI,SACzCvF,EAAAC,EAAAC,cAAA,yBAEDyC,KAAKI,MAAMM,OAASV,KAAK6C,eAAiB7C,KAAK8C,qBAtItCC,cCGEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OAAOjG,EAAAC,EAAAC,cAACgG,EAAD,MAASC,SAASC,eAAe,SDmH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.c139e3b9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.05a3e30f.svg\";","var quizQuestions = [\r\n  {\r\n      question: \"5 X 9=\",\r\n      answers: [\r\n          {\r\n              type: \"Microsoft\",\r\n              content: \"45\"\r\n          },\r\n          {\r\n              type: \"Nintendo\",\r\n              content: \"35\"\r\n          },\r\n          {\r\n              type: \"Sony\",\r\n              content: \"25\"\r\n          }\r\n      ],\r\n      correctanswer:\"45\"\r\n  },\r\n  {\r\n      question: \"7 X 9=\",\r\n      answers: [\r\n          {\r\n              type: \"Microsoft\",\r\n              content: \"29\"\r\n          },\r\n          {\r\n              type: \"Nintendo\",\r\n              content: \"63\"\r\n          },\r\n          {\r\n              type: \"Sony\",\r\n              content: \"42\"\r\n          }\r\n      ],\r\n      correctanswer:\"63\"\r\n  },\r\n  {\r\n      question: \"6 X 8=\",\r\n      answers: [\r\n          {\r\n              type: \"Microsoft\",\r\n              content: \"34\"\r\n          },\r\n          {\r\n              type: \"Nintendo\",\r\n              content: \"22\"\r\n          },\r\n          {\r\n              type: \"Sony\",\r\n              content: \"48\"\r\n          }\r\n      ],\r\n      correctanswer:\"48\"\r\n  },\r\n  {\r\n      question: \"2 X 9=\",\r\n      answers: [\r\n          {\r\n              type: \"Microsoft\",\r\n              content: \"20\"\r\n          },\r\n          {\r\n              type: \"Nintendo\",\r\n              content: \"18\"\r\n          },\r\n          {\r\n              type: \"Sony\",\r\n              content: \"25\"\r\n          }\r\n      ],\r\n      correctanswer:\"18\"\r\n  },\r\n  {\r\n      question: \"7 X 8= \",\r\n      answers: [\r\n          {\r\n              type: \"Microsoft\",\r\n              content: \"32\"\r\n          },\r\n          {\r\n              type: \"Nintendo\",\r\n              content: \"56\"\r\n          },\r\n          {\r\n              type: \"Sony\",\r\n              content: \"27\"\r\n          }\r\n      ],\r\n      correctanswer:\"56\"\r\n  }\r\n];\r\n\r\nexport default quizQuestions;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Question(props) {\r\n  return <h2 className=\"question\">{props.content}</h2>;\r\n}\r\n\r\nQuestion.propTypes = {\r\n  content: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Question;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction QuestionCount(props) {\r\n  return (\r\n    <div className=\"questionCount\">\r\n      Question <span>{props.counter}</span> of <span>{props.total}</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nQuestionCount.propTypes = {\r\n  counter: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired\r\n};\r\n\r\nexport default QuestionCount;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction AnswerOption(props) {\r\n // console.log(props);\r\n  return (\r\n    <li className=\"answerOption\">\r\n      <input\r\n        type=\"radio\"\r\n        className=\"radioCustomButton\"\r\n        name=\"radioGroup\"\r\n        checked={props.answerContent === props.answer}\r\n        id={props.answerType}\r\n        value={props.answerContent}\r\n        disabled={props.answer}\r\n        onChange={props.onAnswerSelected}\r\n      />\r\n      <label className=\"radioCustomLabel\" htmlFor={props.answerType}>\r\n        {props.answerContent}\r\n      </label>\r\n    </li>\r\n  );\r\n}\r\n\r\nAnswerOption.propTypes = {\r\n  answerType: PropTypes.string.isRequired,\r\n  answerContent: PropTypes.string.isRequired,\r\n  answer: PropTypes.string.isRequired,\r\n  onAnswerSelected: PropTypes.func.isRequired\r\n};\r\n\r\nexport default AnswerOption;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { CSSTransitionGroup } from 'react-transition-group';\r\nimport Question from '../components/Question';\r\nimport QuestionCount from '../components/QuestionCount';\r\nimport AnswerOption from '../components/AnswerOption';\r\n\r\nfunction Quiz(props) {\r\n  function renderAnswerOptions(key) {\r\n    return (\r\n      <AnswerOption\r\n        key={key.content}\r\n        answerContent={key.content}\r\n        answerType={key.type}\r\n        answer={props.answer}\r\n        questionId={props.questionId}\r\n        onAnswerSelected={props.onAnswerSelected}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <CSSTransitionGroup\r\n      className=\"container\"\r\n      component=\"div\"\r\n      transitionName=\"fade\"\r\n      transitionEnterTimeout={800}\r\n      transitionLeaveTimeout={500}\r\n      transitionAppear\r\n      transitionAppearTimeout={500}\r\n    >\r\n      <div key={props.questionId}>\r\n        <QuestionCount counter={props.questionId} total={props.questionTotal} />\r\n        <Question content={props.question} />\r\n        <ul className=\"answerOptions\">\r\n          {props.answerOptions.map(renderAnswerOptions)}\r\n        </ul>\r\n      </div>\r\n    </CSSTransitionGroup>\r\n  );\r\n}\r\n\r\nQuiz.propTypes = {\r\n  answer: PropTypes.string.isRequired,\r\n  answerOptions: PropTypes.array.isRequired,\r\n  question: PropTypes.string.isRequired,\r\n  questionId: PropTypes.number.isRequired,\r\n  questionTotal: PropTypes.number.isRequired,\r\n  onAnswerSelected: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Quiz;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { CSSTransitionGroup } from 'react-transition-group';\r\n\r\nfunction Result(props) {\r\n  return (\r\n    <CSSTransitionGroup\r\n      className=\"container result\"\r\n      component=\"div\"\r\n      transitionName=\"fade\"\r\n      transitionEnterTimeout={800}\r\n      transitionLeaveTimeout={500}\r\n      transitionAppear\r\n      transitionAppearTimeout={500}\r\n    >\r\n      <div>\r\n  <strong>{props.quizResult.map(r=><li key={r.id}>{r.question + r.answer } {r.correct? <span>&#10004;</span>:<span>&#10008;</span>} </li>)}</strong>!\r\n      </div>\r\n    </CSSTransitionGroup>\r\n  );\r\n}\r\n\r\nResult.propTypes = {\r\n  quizResult: PropTypes.array.isRequired\r\n};\r\n\r\nexport default Result;\r\n","import React, { Component } from 'react';\r\nimport quizQuestions from './api/quizQuestions';\r\nimport Quiz from './components/Quiz';\r\nimport Result from './components/Result';\r\nimport logo from './svg/logo.svg';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      counter: 0,\r\n      questionId: 1,\r\n      question: '',\r\n      answerOptions: [],\r\n      answer: '',\r\n      correctanswer:'',\r\n      detailResult:[],\r\n      answersCount: {\r\n        Nintendo: 0,\r\n        Microsoft: 0,\r\n        Sony: 0\r\n      },\r\n      result: false\r\n    };\r\n\r\n    this.handleAnswerSelected = this.handleAnswerSelected.bind(this);\r\n  }\r\n\r\n  componentWillMount() {\r\n    const shuffledAnswerOptions = quizQuestions.map(question =>\r\n      this.shuffleArray(question.answers)\r\n    );\r\n    this.setState({\r\n      question: quizQuestions[0].question,\r\n      correctanswer:quizQuestions[0].correctanswer,\r\n      answerOptions: shuffledAnswerOptions[0]\r\n    });\r\n  }\r\n\r\n  shuffleArray(array) {\r\n    var currentIndex = array.length,\r\n      temporaryValue,\r\n      randomIndex;\r\n\r\n    // While there remain elements to shuffle...\r\n    while (0 !== currentIndex) {\r\n      // Pick a remaining element...\r\n      randomIndex = Math.floor(Math.random() * currentIndex);\r\n      currentIndex -= 1;\r\n\r\n      // And swap it with the current element.\r\n      temporaryValue = array[currentIndex];\r\n      array[currentIndex] = array[randomIndex];\r\n      array[randomIndex] = temporaryValue;\r\n    }\r\n\r\n    return array;\r\n  }\r\n\r\n  handleAnswerSelected(event) {\r\n    console.log(event.currentTarget);\r\n    console.log(this.state.question);\r\n    console.log(this.state.correctanswer);\r\n    \r\n\r\n    this.setUserAnswer(event.currentTarget.value);\r\n\r\n    if (this.state.questionId < quizQuestions.length) {\r\n      setTimeout(() => this.setNextQuestion(), 300);\r\n    } else {\r\n      setTimeout(() => this.setResults(), 300);\r\n    }\r\n  }\r\n\r\n  setUserAnswer(answer) {\r\n    //console.log(answer);\r\n    //let result = ;\r\n\r\n    this.setState((state, props) => ({\r\n      answersCount: {\r\n        ...state.answersCount,\r\n        [answer]: state.answersCount[answer] + 1\r\n      },\r\n      detailResult: [...state.detailResult, \r\n        { id:this.state.questionId,\r\n          question:this.state.question,\r\n          answer:answer,\r\n          correct: answer===this.state.correctanswer}],\r\n      //detailResult:\r\n      answer: answer\r\n    }));\r\n  }\r\n\r\n  setNextQuestion() {\r\n    const counter = this.state.counter + 1;\r\n    const questionId = this.state.questionId + 1;\r\n\r\n    this.setState({\r\n      counter: counter,\r\n      questionId: questionId,\r\n      question: quizQuestions[counter].question,\r\n      correctanswer:quizQuestions[counter].correctanswer,\r\n      answerOptions: quizQuestions[counter].answers,\r\n      answer: ''\r\n    });\r\n  }\r\n\r\n  \r\n\r\n  setResults() {\r\n\r\n    this.setState({result:true})\r\n    \r\n  }\r\n\r\n  renderQuiz() {\r\n    return (\r\n      <Quiz\r\n        answer={this.state.answer}\r\n        answerOptions={this.state.answerOptions}\r\n        questionId={this.state.questionId}\r\n        question={this.state.question}\r\n        questionTotal={quizQuestions.length}\r\n        onAnswerSelected={this.handleAnswerSelected}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderResult() {\r\n    return <Result quizResult={this.state.detailResult} />;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"App-header\">\r\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n          <h2>React Quiz</h2>\r\n        </div>\r\n        {this.state.result ? this.renderResult() : this.renderQuiz()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n\r\n              // Execute callback\r\n              if (config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}